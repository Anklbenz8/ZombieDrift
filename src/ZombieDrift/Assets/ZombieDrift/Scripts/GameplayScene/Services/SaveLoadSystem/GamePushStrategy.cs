using Cysharp.Threading.Tasks;using GamePush;using UnityEngine;namespace SaveLoadSystemNamespace {    public class GamePushStrategy : ISaveLoadStrategy {        private UniTaskCompletionSource<string> _getCompletionSource;        public void Save(ISaveLoadObject saveObject) {            var jsonData = saveObject.GetSaveLoadData();            //  GP_Storage.Set(saveObject.objectKey, jsonData);            GP_Player.Set(saveObject.objectKey, jsonData);            GP_Player.Sync();        }        public UniTask Load(ISaveLoadObject saveObject) {            //     _getCompletionSource = new UniTaskCompletionSource<string>();            Debug.Log($"Load requested{saveObject.objectKey}");            // GP_Storage.Get(saveObject.objectKey, OnDataLoaded);            var result = GP_Player.GetString(saveObject.objectKey);            //    var result = await _getCompletionSource.Task;            saveObject.RestoreValues(result);            return UniTask.CompletedTask;        }        private void OnDataLoaded(object s) {            Debug.Log($"OnDataLoaded\n {(string)s}");            _getCompletionSource.TrySetResult((string)s);        }    }}